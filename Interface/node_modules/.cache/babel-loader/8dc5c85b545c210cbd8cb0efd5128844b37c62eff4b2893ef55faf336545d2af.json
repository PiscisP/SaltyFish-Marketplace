{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    login() {\n      console.log('Login:', this.username, this.password);\n      // Mock login validation\n      if (this.username && this.password) {\n        // Redirect to the main page\n        this.$router.push({\n          name: 'MainPage'\n        });\n      }\n    }\n  }\n\n  // async login() {\n  //     try {\n  //       console.log('Login:', this.username, this.password);\n\n  //       // Send a POST request to the backend \n  //       const response = await axios.post('/login', {\n  //         username: this.username,\n  //         password: this.password\n  //       });\n\n  //       // Check response and redirect or show error\n  //       if (response.data.code === 'OK') {\n  //         this.$router.push({ name: 'MainPage' });\n  //       } else {\n  //         this.errorMessage = 'Invalid login credentials';\n  //       }\n  //     } catch (error) {\n  //       console.error('Login error:', error);\n  //       this.errorMessage = 'Error logging in';\n  //     }\n  //   }\n};","map":{"version":3,"names":["name","data","username","password","errorMessage","methods","login","console","log","$router","push"],"sources":["C:\\Users\\13717\\community-marketplace\\Interface\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <input type=\"text\" placeholder=\"Email/Username\" v-model=\"username\" required />\r\n      <input type=\"password\" placeholder=\"Password\" v-model=\"password\" required />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      console.log('Login:', this.username, this.password);\r\n      // Mock login validation\r\n      if (this.username && this.password) {\r\n        // Redirect to the main page\r\n        this.$router.push ({ name: 'MainPage' });\r\n      }\r\n    }\r\n  }\r\n\r\n  // async login() {\r\n  //     try {\r\n  //       console.log('Login:', this.username, this.password);\r\n        \r\n  //       // Send a POST request to the backend \r\n  //       const response = await axios.post('/login', {\r\n  //         username: this.username,\r\n  //         password: this.password\r\n  //       });\r\n\r\n  //       // Check response and redirect or show error\r\n  //       if (response.data.code === 'OK') {\r\n  //         this.$router.push({ name: 'MainPage' });\r\n  //       } else {\r\n  //         this.errorMessage = 'Invalid login credentials';\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error('Login error:', error);\r\n  //       this.errorMessage = 'Error logging in';\r\n  //     }\r\n  //   }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\ndiv {\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 300px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  border: none;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 0px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    align:center;\r\n  background-color: #444;\r\n}\r\n</style>\r\n"],"mappings":";AAYA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACN,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;MACnD;MACA,IAAI,IAAI,CAACD,QAAO,IAAK,IAAI,CAACC,QAAQ,EAAE;QAClC;QACA,IAAI,CAACM,OAAO,CAACC,IAAG,CAAG;UAAEV,IAAI,EAAE;QAAW,CAAC,CAAC;MAC1C;IACF;EACF;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}