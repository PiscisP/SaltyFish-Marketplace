{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'MessagesView',\n  data() {\n    return {\n      newMessage: '',\n      messages: [] // Start with an empty array\n    };\n  },\n\n  methods: {\n    sendMessage() {\n      if (this.newMessage.trim() !== '') {\n        // Add new message to messages array\n        const currentTime = new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n        this.messages.push({\n          id: this.messages.length + 1,\n          text: this.newMessage,\n          time: currentTime,\n          isSender: true // Assuming the user is always the sender\n        });\n\n        this.newMessage = ''; // Reset input field\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","newMessage","messages","methods","sendMessage","trim","currentTime","Date","toLocaleTimeString","hour","minute","push","id","length","text","time","isSender"],"sources":["C:\\Users\\13717\\community-marketplace\\Interface\\src\\views\\MessagesView.vue"],"sourcesContent":["<template>\r\n  <div class=\"messages-view\">\r\n    <!-- Message list -->\r\n    <div class=\"message-list\">\r\n      <div class=\"message\" v-for=\"message in messages\" :key=\"message.id\" :class=\"{ 'sender': message.isSender, 'receiver': !message.isSender }\">\r\n        <div class=\"message-bubble\">\r\n          <div class=\"message-text\">{{ message.text }}</div>\r\n          <div class=\"message-time\">{{ message.time }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Message input area -->\r\n    <div class=\"message-input\">\r\n      <input type=\"text\" v-model=\"newMessage\" placeholder=\"Type a message...\" @keyup.enter=\"sendMessage\" />\r\n      <button @click=\"sendMessage\">Send</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessagesView',\r\n  data() {\r\n    return {\r\n      newMessage: '',\r\n      messages: [], // Start with an empty array\r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (this.newMessage.trim() !== '') {\r\n        // Add new message to messages array\r\n        const currentTime = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        this.messages.push({\r\n          id: this.messages.length + 1,\r\n          text: this.newMessage,\r\n          time: currentTime,\r\n          isSender: true, // Assuming the user is always the sender\r\n        });\r\n        this.newMessage = ''; // Reset input field\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.messages-view {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh; /* Full viewport height */\r\n  background-color: #f9f9f9; /* Background color */\r\n}\r\n\r\n.message-list {\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  width: 100%; /* Ensure the message takes full width of the container */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.message.sender .message-bubble {\r\n  margin-left: auto;\r\n  background-color: #333; /* Sender bubble color */\r\n}\r\n\r\n.message.receiver .message-bubble {\r\n  background-color: #ccc; /* Receiver bubble color */\r\n}\r\n\r\n.message-bubble {\r\n  width: calc(100% - 20px); /* Full width minus padding */\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  color: white; /* Text color */\r\n}\r\n\r\n.message-text {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.message-time {\r\n  font-size: 0.75rem;\r\n  text-align: right;\r\n  color: #ddd; /* Time text color */\r\n}\r\n\r\n.message-input {\r\n  display: flex;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-top: 1px solid #ccc;\r\n}\r\n\r\n.message-input input {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 15px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.message-input button {\r\n  padding: 10px 15px;\r\n  background-color: #333; /* Button background color */\r\n  color: white; /* Button text color */\r\n  border: none;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n}\r\n\r\n.message-input button:hover {\r\n  background-color: #444; /* Button hover color */\r\n}\r\n</style>\r\n"],"mappings":";AAqBA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,MAAM,EAAE,EAAE;QACjC;QACA,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;QAC7F,IAAI,CAACR,QAAQ,CAACS,IAAI,CAAC;UACjBC,EAAE,EAAE,IAAI,CAACV,QAAQ,CAACW,MAAK,GAAI,CAAC;UAC5BC,IAAI,EAAE,IAAI,CAACb,UAAU;UACrBc,IAAI,EAAET,WAAW;UACjBU,QAAQ,EAAE,IAAI,CAAE;QAClB,CAAC,CAAC;;QACF,IAAI,CAACf,UAAS,GAAI,EAAE,EAAE;MACxB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}