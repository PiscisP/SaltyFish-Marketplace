{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    currentContact: {\n      type: Object,\n      default: () => null\n    }\n  },\n  data() {\n    return {\n      newMessage: '',\n      messages: [] // This should ideally come from a store or API\n    };\n  },\n\n  computed: {\n    filteredMessages() {\n      return this.messages.filter(msg => msg.contactId === this.currentContact?.id);\n    }\n  },\n  methods: {\n    sendMessage() {\n      if (!this.newMessage.trim()) return;\n      this.messages.push({\n        id: Date.now(),\n        text: this.newMessage,\n        sender: 'You',\n        contactId: this.currentContact.id\n      });\n      this.newMessage = '';\n    }\n  }\n};","map":{"version":3,"names":["props","currentContact","type","Object","default","data","newMessage","messages","computed","filteredMessages","filter","msg","contactId","id","methods","sendMessage","trim","push","Date","now","text","sender"],"sources":["C:\\Users\\13717\\community-marketplace\\Interface\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"chatbox\">\r\n    <div v-if=\"currentContact\" class=\"messages\">\r\n      <div v-for=\"message in filteredMessages\" :key=\"message.id\" class=\"message\">\r\n        <span>{{ message.sender }}:</span> {{ message.text }}\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"no-contact\">\r\n      <p>Select a contact to start chatting.</p>\r\n    </div>\r\n    <div class=\"message-input\">\r\n      <input type=\"text\" v-model=\"newMessage\" placeholder=\"Type a message...\" @keyup.enter=\"sendMessage\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    currentContact: {\r\n      type: Object,\r\n      default: () => null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      newMessage: '',\r\n      messages: [] // This should ideally come from a store or API\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMessages() {\r\n      return this.messages.filter(msg => msg.contactId === this.currentContact?.id);\r\n    }\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (!this.newMessage.trim()) return;\r\n      this.messages.push({\r\n        id: Date.now(),\r\n        text: this.newMessage,\r\n        sender: 'You',\r\n        contactId: this.currentContact.id\r\n      });\r\n      this.newMessage = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chatbox {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  /* Add more styles as needed */\r\n}\r\n</style>\r\n"],"mappings":";AAiBA,eAAe;EACbA,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAC,CAAE;IACf,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,GAAE,IAAKA,GAAG,CAACC,SAAQ,KAAM,IAAI,CAACX,cAAc,EAAEY,EAAE,CAAC;IAC/E;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,EAAE;MAC7B,IAAI,CAACT,QAAQ,CAACU,IAAI,CAAC;QACjBJ,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE,IAAI,CAACd,UAAU;QACrBe,MAAM,EAAE,KAAK;QACbT,SAAS,EAAE,IAAI,CAACX,cAAc,CAACY;MACjC,CAAC,CAAC;MACF,IAAI,CAACP,UAAS,GAAI,EAAE;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}