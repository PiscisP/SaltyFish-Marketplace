{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa2e3d3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chatbox\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"messages\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-contact\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Select a contact to start chatting.\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  class: \"message-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.currentContact ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredMessages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(message.sender) + \":\", 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(message.text), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5])), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newMessage = $event),\n    placeholder: \"Type a message...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newMessage]])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_4","_createElementBlock","_hoisted_1","$props","currentContact","_hoisted_2","_Fragment","_renderList","$options","filteredMessages","message","key","id","_toDisplayString","sender","text","_hoisted_3","_hoisted_5","_hoisted_6","type","$data","newMessage","$event","placeholder","onKeyup","_cache","_withKeys","args","sendMessage"],"sources":["C:\\Users\\13717\\community-marketplace\\Interface\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"chatbox\">\r\n    <div v-if=\"currentContact\" class=\"messages\">\r\n      <div v-for=\"message in filteredMessages\" :key=\"message.id\" class=\"message\">\r\n        <span>{{ message.sender }}:</span> {{ message.text }}\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"no-contact\">\r\n      <p>Select a contact to start chatting.</p>\r\n    </div>\r\n    <div class=\"message-input\">\r\n      <input type=\"text\" v-model=\"newMessage\" placeholder=\"Type a message...\" @keyup.enter=\"sendMessage\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    currentContact: {\r\n      type: Object,\r\n      default: () => null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      newMessage: '',\r\n      messages: [] // This should ideally come from a store or API\r\n    };\r\n  },\r\n  computed: {\r\n    filteredMessages() {\r\n      return this.messages.filter(msg => msg.contactId === this.currentContact?.id);\r\n    }\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (!this.newMessage.trim()) return;\r\n      this.messages.push({\r\n        id: Date.now(),\r\n        text: this.newMessage,\r\n        sender: 'You',\r\n        contactId: this.currentContact.id\r\n      });\r\n      this.newMessage = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chatbox {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  /* Add more styles as needed */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;;EACSA,KAAK,EAAC;;;;EAKrBA,KAAK,EAAC;;gEAChBC,mBAAA,CAA0C,WAAvC,qCAAmC;oBAAtCC,UAA0C,C;;EAEvCF,KAAK,EAAC;AAAe;;uBAT5BG,mBAAA,CAYM,OAZNC,UAYM,GAXOC,MAAA,CAAAC,cAAc,I,cAAzBH,mBAAA,CAIM,OAJNI,UAIM,I,kBAHJJ,mBAAA,CAEMK,SAAA,QAAAC,WAAA,CAFiBC,QAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBAAnBT,mBAAA,CAEM;MAFoCU,GAAG,EAAED,OAAO,CAACE,EAAE;MAAEd,KAAK,EAAC;QAC/DC,mBAAA,CAAkC,cAAAc,gBAAA,CAAzBH,OAAO,CAACI,MAAM,IAAG,GAAC,iB,iBAAO,GAAC,GAAAD,gBAAA,CAAGH,OAAO,CAACK,IAAI,iB;qDAGtDd,mBAAA,CAEM,OAFNe,UAEM,MAAAC,UAAA,KACNlB,mBAAA,CAEM,OAFNmB,UAEM,G,gBADJnB,mBAAA,CAAqG;IAA9FoB,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,UAAU,GAAAC,MAAA;IAAEC,WAAW,EAAC,mBAAmB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQnB,QAAA,CAAAoB,WAAA,IAAApB,QAAA,CAAAoB,WAAA,IAAAD,IAAA,CAAW;iEAArEP,KAAA,CAAAC,UAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}