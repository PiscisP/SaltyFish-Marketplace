{"ast":null,"code":"import { vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0eca37cb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"search-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Search for items...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.search && $options.search(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.searchQuery]])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","placeholder","$data","searchQuery","$event","onKeyup","_cache","_withKeys","args","$options","search"],"sources":["C:\\Users\\13717\\community-marketplace\\Interface\\src\\components\\SearchBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-bar\">\r\n    <input type=\"text\" placeholder=\"Search for items...\" v-model=\"searchQuery\" @keyup.enter=\"search\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SearchBar',\r\n  data() {\r\n    return {\r\n      searchQuery: ''\r\n    };\r\n  },\r\n  methods: {\r\n    search() {\r\n      // Logic to perform search\r\n      console.log('Searching for:', this.searchQuery);\r\n      // You might want to emit an event or call a method to perform the search\r\n      // this.$emit('search', this.searchQuery);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-bar {\r\n  width: 100%;\r\n  padding: 10px 15px; /* Adjust padding as needed */\r\n  box-sizing: border-box; /* Include padding in the element's total width and height */\r\n  position: fixed; /* Fix the search bar at the top */\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100; /* Ensure the search bar is above other content */\r\n  background: #fff; /* Set a background color that matches your design */\r\n}\r\n\r\n.search-bar input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px; /* Optional: rounded corners */\r\n  font-size: 16px; /* Adjust font size as needed */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAY;;uBAAvBC,mBAAA,CAEM,OAFNC,UAEM,G,gBADJC,mBAAA,CAAkG;IAA3FC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,qBAAqB;+DAAUC,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;iEAAjCN,KAAA,CAAAC,WAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}